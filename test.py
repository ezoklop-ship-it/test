import asyncio
from ro_py.client import Client  # Install with: pip install ro-py

# Hardcoded .ROBLOSECURITY token (highly insecure, for educational purposes only)
TOKEN = "_|WARNING:-DO-NOT-SHARE-THIS.--Sharing-this-will-allow-someone-to-log-in-as-you-and-to-steal-your-ROBUX-and-items.|_CAEaAh

# Create the client with the token for authentication
client = Client(TOKEN)

async def main():
    try:
        # Get the authenticated user (yourself) to verify login
        me = await client.get_authenticated_user()
        print(f'Logged in as {me.name} (ID: {me.id})')
        
        # Example: Replace with the target user's ID (integer) or username (string)
        TARGET_USER_ID = 9280630447  # Example: Roblox's user ID; use a real one for testing
        
        # Fetch the target user
        target_user = await client.get_user(TARGET_USER_ID)
        if target_user is None:
            print(f'Error: User with ID {TARGET_USER_ID} not found.')
            return
        
        # Follow the user with a delay to respect rate limits
        await asyncio.sleep(2)
        await target_user.follow()
        print(f'Successfully followed {target_user.name}')
        
        # Send a friend request with a delay to respect rate limits
        await asyncio.sleep(2)
        await target_user.send_friend_request()
        print(f'Sent friend request to {target_user.name}')
        
    except Exception as e:
        print(f'Error: {e}')
    finally:
        # Ensure the client session is closed to avoid lingering connections
        await client.close()

# Run the async main function
if __name__ == "__main__":
    asyncio.run(main())
